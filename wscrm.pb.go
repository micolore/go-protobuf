// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: wscrm.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 点对点消息发送数据结构
type PointSendMssage struct {
	MsgId                string   `protobuf:"bytes,1,opt,name=MsgId,proto3" json:"MsgId,omitempty"`
	MsgType              string   `protobuf:"bytes,2,opt,name=MsgType,proto3" json:"MsgType,omitempty"`
	MsgData              []byte   `protobuf:"bytes,3,opt,name=MsgData,proto3" json:"MsgData,omitempty"`
	SendUid              string   `protobuf:"bytes,4,opt,name=SendUid,proto3" json:"SendUid,omitempty"`
	RecvUid              string   `protobuf:"bytes,5,opt,name=RecvUid,proto3" json:"RecvUid,omitempty"`
	MsgStype             string   `protobuf:"bytes,6,opt,name=MsgStype,proto3" json:"MsgStype,omitempty"`
	MsgStime             string   `protobuf:"bytes,7,opt,name=MsgStime,proto3" json:"MsgStime,omitempty"`
	ChildData            []string `protobuf:"bytes,8,rep,name=childData,proto3" json:"childData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PointSendMssage) Reset()         { *m = PointSendMssage{} }
func (m *PointSendMssage) String() string { return proto.CompactTextString(m) }
func (*PointSendMssage) ProtoMessage()    {}
func (*PointSendMssage) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd136e0f2890e8d5, []int{0}
}
func (m *PointSendMssage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PointSendMssage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PointSendMssage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PointSendMssage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PointSendMssage.Merge(m, src)
}
func (m *PointSendMssage) XXX_Size() int {
	return m.Size()
}
func (m *PointSendMssage) XXX_DiscardUnknown() {
	xxx_messageInfo_PointSendMssage.DiscardUnknown(m)
}

var xxx_messageInfo_PointSendMssage proto.InternalMessageInfo

func (m *PointSendMssage) GetMsgId() string {
	if m != nil {
		return m.MsgId
	}
	return ""
}

func (m *PointSendMssage) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *PointSendMssage) GetMsgData() []byte {
	if m != nil {
		return m.MsgData
	}
	return nil
}

func (m *PointSendMssage) GetSendUid() string {
	if m != nil {
		return m.SendUid
	}
	return ""
}

func (m *PointSendMssage) GetRecvUid() string {
	if m != nil {
		return m.RecvUid
	}
	return ""
}

func (m *PointSendMssage) GetMsgStype() string {
	if m != nil {
		return m.MsgStype
	}
	return ""
}

func (m *PointSendMssage) GetMsgStime() string {
	if m != nil {
		return m.MsgStime
	}
	return ""
}

func (m *PointSendMssage) GetChildData() []string {
	if m != nil {
		return m.ChildData
	}
	return nil
}

type DataMessage struct {
	MsgType              string           `protobuf:"bytes,1,opt,name=MsgType,proto3" json:"MsgType,omitempty"`
	PointSendMssage      *PointSendMssage `protobuf:"bytes,2,opt,name=pointSendMssage,proto3" json:"pointSendMssage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DataMessage) Reset()         { *m = DataMessage{} }
func (m *DataMessage) String() string { return proto.CompactTextString(m) }
func (*DataMessage) ProtoMessage()    {}
func (*DataMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd136e0f2890e8d5, []int{1}
}
func (m *DataMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DataMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DataMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DataMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataMessage.Merge(m, src)
}
func (m *DataMessage) XXX_Size() int {
	return m.Size()
}
func (m *DataMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DataMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DataMessage proto.InternalMessageInfo

func (m *DataMessage) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *DataMessage) GetPointSendMssage() *PointSendMssage {
	if m != nil {
		return m.PointSendMssage
	}
	return nil
}

func init() {
	proto.RegisterType((*PointSendMssage)(nil), "protobuf.PointSendMssage")
	proto.RegisterType((*DataMessage)(nil), "protobuf.DataMessage")
}

func init() { proto.RegisterFile("wscrm.proto", fileDescriptor_dd136e0f2890e8d5) }

var fileDescriptor_dd136e0f2890e8d5 = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0x2f, 0x4e, 0x2e,
	0xca, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0x49, 0xa5, 0x69, 0x4a, 0x4f,
	0x19, 0xb9, 0xf8, 0x03, 0xf2, 0x33, 0xf3, 0x4a, 0x82, 0x53, 0xf3, 0x52, 0x7c, 0x8b, 0x8b, 0x13,
	0xd3, 0x53, 0x85, 0x44, 0xb8, 0x58, 0x7d, 0x8b, 0xd3, 0x3d, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35,
	0x38, 0x83, 0x20, 0x1c, 0x21, 0x09, 0x2e, 0x76, 0xdf, 0xe2, 0xf4, 0x90, 0xca, 0x82, 0x54, 0x09,
	0x26, 0xb0, 0x38, 0x8c, 0x0b, 0x95, 0x71, 0x49, 0x2c, 0x49, 0x94, 0x60, 0x56, 0x60, 0xd4, 0xe0,
	0x09, 0x82, 0x71, 0x41, 0x32, 0x20, 0x73, 0x43, 0x33, 0x53, 0x24, 0x58, 0x20, 0x7a, 0xa0, 0x5c,
	0x90, 0x4c, 0x50, 0x6a, 0x72, 0x19, 0x48, 0x86, 0x15, 0x22, 0x03, 0xe5, 0x0a, 0x49, 0x71, 0x71,
	0xf8, 0x16, 0xa7, 0x07, 0x97, 0x80, 0x2c, 0x62, 0x03, 0x4b, 0xc1, 0xf9, 0x70, 0xb9, 0xcc, 0xdc,
	0x54, 0x09, 0x76, 0x24, 0xb9, 0xcc, 0xdc, 0x54, 0x21, 0x19, 0x2e, 0xce, 0xe4, 0x8c, 0xcc, 0x9c,
	0x14, 0xb0, 0x3b, 0x38, 0x14, 0x98, 0x35, 0x38, 0x83, 0x10, 0x02, 0x4a, 0x39, 0x5c, 0xdc, 0x20,
	0xda, 0x37, 0x15, 0xe2, 0x45, 0x24, 0xcf, 0x30, 0xa2, 0x7a, 0xc6, 0x99, 0x8b, 0xbf, 0x00, 0x35,
	0x3c, 0xc0, 0xde, 0xe5, 0x36, 0x92, 0xd4, 0x83, 0x05, 0x9a, 0x1e, 0x5a, 0x80, 0x05, 0xa1, 0xeb,
	0x70, 0x12, 0x38, 0xf1, 0x48, 0x8e, 0xf1, 0xc2, 0x23, 0x39, 0xc6, 0x07, 0x8f, 0xe4, 0x18, 0x67,
	0x3c, 0x96, 0x63, 0x48, 0x62, 0x03, 0x6b, 0x36, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x45, 0xd9,
	0x99, 0xa6, 0x87, 0x01, 0x00, 0x00,
}

func (m *PointSendMssage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PointSendMssage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PointSendMssage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ChildData) > 0 {
		for iNdEx := len(m.ChildData) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ChildData[iNdEx])
			copy(dAtA[i:], m.ChildData[iNdEx])
			i = encodeVarintWscrm(dAtA, i, uint64(len(m.ChildData[iNdEx])))
			i--
			dAtA[i] = 0x42
		}
	}
	if len(m.MsgStime) > 0 {
		i -= len(m.MsgStime)
		copy(dAtA[i:], m.MsgStime)
		i = encodeVarintWscrm(dAtA, i, uint64(len(m.MsgStime)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.MsgStype) > 0 {
		i -= len(m.MsgStype)
		copy(dAtA[i:], m.MsgStype)
		i = encodeVarintWscrm(dAtA, i, uint64(len(m.MsgStype)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.RecvUid) > 0 {
		i -= len(m.RecvUid)
		copy(dAtA[i:], m.RecvUid)
		i = encodeVarintWscrm(dAtA, i, uint64(len(m.RecvUid)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.SendUid) > 0 {
		i -= len(m.SendUid)
		copy(dAtA[i:], m.SendUid)
		i = encodeVarintWscrm(dAtA, i, uint64(len(m.SendUid)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.MsgData) > 0 {
		i -= len(m.MsgData)
		copy(dAtA[i:], m.MsgData)
		i = encodeVarintWscrm(dAtA, i, uint64(len(m.MsgData)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.MsgType) > 0 {
		i -= len(m.MsgType)
		copy(dAtA[i:], m.MsgType)
		i = encodeVarintWscrm(dAtA, i, uint64(len(m.MsgType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MsgId) > 0 {
		i -= len(m.MsgId)
		copy(dAtA[i:], m.MsgId)
		i = encodeVarintWscrm(dAtA, i, uint64(len(m.MsgId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DataMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DataMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DataMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PointSendMssage != nil {
		{
			size, err := m.PointSendMssage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintWscrm(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.MsgType) > 0 {
		i -= len(m.MsgType)
		copy(dAtA[i:], m.MsgType)
		i = encodeVarintWscrm(dAtA, i, uint64(len(m.MsgType)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintWscrm(dAtA []byte, offset int, v uint64) int {
	offset -= sovWscrm(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PointSendMssage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MsgId)
	if l > 0 {
		n += 1 + l + sovWscrm(uint64(l))
	}
	l = len(m.MsgType)
	if l > 0 {
		n += 1 + l + sovWscrm(uint64(l))
	}
	l = len(m.MsgData)
	if l > 0 {
		n += 1 + l + sovWscrm(uint64(l))
	}
	l = len(m.SendUid)
	if l > 0 {
		n += 1 + l + sovWscrm(uint64(l))
	}
	l = len(m.RecvUid)
	if l > 0 {
		n += 1 + l + sovWscrm(uint64(l))
	}
	l = len(m.MsgStype)
	if l > 0 {
		n += 1 + l + sovWscrm(uint64(l))
	}
	l = len(m.MsgStime)
	if l > 0 {
		n += 1 + l + sovWscrm(uint64(l))
	}
	if len(m.ChildData) > 0 {
		for _, s := range m.ChildData {
			l = len(s)
			n += 1 + l + sovWscrm(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DataMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MsgType)
	if l > 0 {
		n += 1 + l + sovWscrm(uint64(l))
	}
	if m.PointSendMssage != nil {
		l = m.PointSendMssage.Size()
		n += 1 + l + sovWscrm(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovWscrm(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozWscrm(x uint64) (n int) {
	return sovWscrm(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PointSendMssage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowWscrm
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PointSendMssage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PointSendMssage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWscrm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWscrm
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWscrm
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MsgId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWscrm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWscrm
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWscrm
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MsgType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgData", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWscrm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthWscrm
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthWscrm
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MsgData = append(m.MsgData[:0], dAtA[iNdEx:postIndex]...)
			if m.MsgData == nil {
				m.MsgData = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendUid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWscrm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWscrm
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWscrm
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SendUid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecvUid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWscrm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWscrm
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWscrm
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RecvUid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgStype", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWscrm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWscrm
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWscrm
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MsgStype = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgStime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWscrm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWscrm
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWscrm
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MsgStime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChildData", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWscrm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWscrm
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWscrm
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChildData = append(m.ChildData, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipWscrm(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthWscrm
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthWscrm
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DataMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowWscrm
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DataMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DataMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWscrm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWscrm
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWscrm
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MsgType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PointSendMssage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWscrm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthWscrm
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthWscrm
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PointSendMssage == nil {
				m.PointSendMssage = &PointSendMssage{}
			}
			if err := m.PointSendMssage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipWscrm(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthWscrm
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthWscrm
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipWscrm(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowWscrm
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowWscrm
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowWscrm
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthWscrm
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupWscrm
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthWscrm
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthWscrm        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowWscrm          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupWscrm = fmt.Errorf("proto: unexpected end of group")
)
